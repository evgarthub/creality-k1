# https://github.com/Guilouz/Creality-K1-and-K1-Max/wiki/Improve-Fans-Control
[gcode_macro WAIT_TEMP_START]
gcode:
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=1
  SET_PIN PIN=fan0 VALUE=210
  SET_PIN PIN=fan2 VALUE=210

[gcode_macro WAIT_TEMP_END]
gcode:
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=0
  M106 P0 S0
  M106 P2 S0

[gcode_macro M141]
description: Set Chamber Temperature with slicers
gcode:
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber_fan TARGET={params.S|default(35)}

[gcode_macro START_PRINT]
variable_prepare: 0
gcode:
  {action_respond_info("START_PRINT \n")}
  WAIT_TEMP_END
  CLEAR_PAUSE
  {% set g28_extruder_temp = printer.custom_macro.g28_ext_temp %}
  {% set bed_temp = printer.custom_macro.default_bed_temp %}
  {% set extruder_temp = printer.custom_macro.default_extruder_temp %}

  {% if 'BED_TEMP' in params|upper and (params.BED_TEMP|float) %}
    {% set bed_temp = params.BED_TEMP %}
  {% endif %}

  # {% if 'BED_TYPE' in params|upper %}
  #   {if params.BED_TYPE=="'Textured PEI Plate'"}
  #     SET_GCODE_OFFSET Z=0.03
  #   {else}
  #     SET_GCODE_OFFSET Z=0.04
  #   {endif}
  # {% endif %}
  
  {% if 'EXTRUDER_TEMP' in params|upper and (params.EXTRUDER_TEMP|float) %}
    {% set extruder_temp = params.EXTRUDER_TEMP %}
  {% endif %}

  {% if printer['gcode_macro START_PRINT'].prepare|int == 0 %}
    {action_respond_info("not prepare.\n")}
    PRINT_PREPARE_CLEAR
    CX_ROUGH_G28 EXTRUDER_TEMP={extruder_temp} BED_TEMP={bed_temp}

    # CLEAN_NOZZLE
    {action_respond_info("Clean the nozzle.\n")}
    CX_NOZZLE_CLEAR
    
    ACCURATE_G28
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
  {% else %}
    PRINT_PREPARE_CLEAR
  {% endif %}

  
  SMART_PARK
  M109 S{extruder_temp}
  M190 S{bed_temp}
  LINE_PURGE
  SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
  {action_respond_info("Loading 'skew_profile'.\n")}
  SKEW_PROFILE LOAD=skew_profile

[gcode_macro SET_GCODE_OFFSET]
description: Saving Z-Offset
rename_existing: _SET_GCODE_OFFSET
gcode:
  {action_respond_info("SET_GCODE_OFFSET \n")}
  {% if printer.save_variables.variables.zoffset %}
  {% set zoffset = printer.save_variables.variables.zoffset %}
  {% else %}
  {% set zoffset = {'z': None} %}
  {% endif %}
  {% set ns = namespace(zoffset={'z': zoffset.z}) %}
  _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
  {%if 'Z' in params %}{% set null = ns.zoffset.update({'z': params.Z}) %}{% endif %}
  {%if 'Z_ADJUST' in params %}
  {%if ns.zoffset.z == None %}{% set null = ns.zoffset.update({'z': 0}) %}{% endif %}
  {% set null = ns.zoffset.update({'z': (ns.zoffset.z | float) + (params.Z_ADJUST | float)}) %}
  {% endif %}
  SAVE_VARIABLE VARIABLE=zoffset VALUE="{ns.zoffset}"


[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:
  {% if printer.save_variables.variables.zoffset %}
  {% set zoffset = printer.save_variables.variables.zoffset %}
  _SET_GCODE_OFFSET {% for axis, offset in zoffset.items() if zoffset[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
  { action_respond_info("Loaded Z-Offset from variables.cfg file: %s" % (zoffset)) }
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_respond_info("Clear active Spool \n")}
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}
  SAVE_VARIABLE VARIABLE=spool VALUE="None"

# Unload material
[gcode_macro QUIT_MATERIAL]
gcode:
  {action_respond_info("Unload filament. \n")}
  SAVE_GCODE_STATE NAME=myMoveState
  M109 S{printer.custom_macro.default_extruder_temp}
  G91
  G1 E20 F180
  G1 E-30 F180
  G1 E-50 F2000

  CLEAR_ACTIVE_SPOOL
  RESTORE_GCODE_STATE NAME=myMoveState

[gcode_macro TEST_RESONANCES_X]
gcode:
  TEST_RESONANCES AXIS=X

[gcode_macro TEST_RESONANCES_Y]
gcode:
  TEST_RESONANCES AXIS=Y

[gcode_macro END_PRINT]
gcode:
  {action_respond_info("END_PRINT \n")}
  # Qmode_exit
  PRINT_PREPARE_CLEAR
  M220 S100
  M204 S500
  TURN_OFF_HEATERS
  M107 P1
  M107 P2
  END_PRINT_POINT
  WAIT_TEMP_START
  M84
  SET_SKEW CLEAR=1